apply plugin: 'groovy'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.2.2"
    compile "com.github.groovy-wslite:groovy-wslite:0.8.0"
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    testCompile "cglib:cglib-nodep:3.1"
}

group = 'net.gvmtool'
archivesBaseName = 'gvm-sdk'
version = '0.5.0'

apply plugin: 'distribution'

distributions {
    main {
        baseName = archivesBaseName
        contents {
            from { libsDir }
        }
    }
}

ext {
    bintrayBaseUrl = 'https://api.bintray.com/maven'
    bintrayUsername = 'vermeulen-mp'
    bintrayRepository = 'gvmtool'
    bintrayPackage = 'gvm-sdk'
}

apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
   from sourceSets.main.allGroovy
   classifier = 'source'
}

publishing {
    publications {
        mavenGroovy(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'GVM SDK')
                root.appendNode('description', 'The Groovy eVironment Manager Java API SDK')
                root.appendNode('inceptionYear', '2013')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developer = root.appendNode('developers').appendNode('developer')
                developer.appendNode('id', 'vermeulen.mp')
                developer.appendNode('name', 'Marco Vermeulen')
                developer.appendNode('email', 'vermeulen.mp@gmail.com')
            }

        }
    }

    repositories {
        maven {
            name 'Bintray'
            url "$bintrayBaseUrl/$bintrayUsername/$bintrayRepository/$bintrayPackage"

            credentials {
                username = System.getenv('BINTRAY_USERNAME') ?: 'invalid_user'
                password = System.getenv('BINTRAY_API_KEY') ?: 'invalid_key'
            }
        }
    }
}

